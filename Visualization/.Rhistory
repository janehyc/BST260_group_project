scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = 0.5)+
geom_jitter(width = 0.05)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.05)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.05,height = 0.05)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.1,height = 0.1)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.1,height = 0.1)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.5,height = 0.5)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.2,height = 0.2)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
theme_minimal()
View(tbl)
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
theme_void()
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
install.packages("emojifont")
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
install.packages("emoGG")
library
library(emoGG)
install.packages("emoGG")
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp()
runApp()
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp()
runApp('Desktop/BST260/BST260_group_project/Visualization')
map <- readPNG("map.png")
forestfire<-read.csv("forestfires.csv")
runApp('Desktop/BST260/BST260_group_project/Visualization')
forestfire<-read.csv("forestfires.csv")
map <- readPNG("map.png")
runApp('Desktop/BST260/BST260_group_project/Visualization')
install.packages("Unicode")
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
shiny::runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
View(MI_Onset_10)
min(forestfire$temp)
max(forestfire$temp)
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
min(forestfire$temp)
max(forestfire$temp)
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
library(viridis)
install.packages("viridis")
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
shiny::runApp('Desktop/BST260/BST260_group_project/Visualization')
1-pnorm(2.8957)
2*(1-pnorm(2.8957))
2*(1-pnorm(3.42))
2*(1-pnorm(3.20))
library(haven)
pancreas <- read_dta("Downloads/pancreas.dta")
View(pancreas)
pancreas %>% group_by(trypsin) %>% summarize(mean(),sd())
pancreas %>% group_by(trypsin) %>% summarize(mean(protein),sd(protein))
load("/Users/qihua/Desktop/EPI 202/HW/HW1/MI_Onset_10.rdata")
View(tbl3)
View(tbl)
View(tbl2)
View(tbl)
View(tbl2)
View(tbl3)
View(tbl)
View(tbl3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
library(olsrr)
# Add season category
fire <- read.csv("forestfires.csv", header=TRUE, sep = ",")
fire$season <- rep("spring", 517)
for (i in 1:517){
if (fire$month[i] %in% c("feb","jan","dec")) fire$season[i] <- "winter"
if (fire$month[i] %in% c("oct","nov","sep")) fire$season[i] <- "autumn"
if (fire$month[i] %in% c("aug","jul","jun")) fire$season[i] <- "summer"
}
fire$season <- as.factor(fire$season)
fire$season.cat <- rep(0, 517)
for (i in 1:517){
if (fire$season[i] == "summer") {
fire$season.cat[i] <- 1
}
if (fire$season[i] == "autumn") {
fire$season.cat[i] <- 2
}
if (fire$season[i] =="winter") {
fire$season.cat[i] <- 3
}
}
fire
# Area log transformation (for area>0)
hist(fire$area,40, main = "Histogram of area", xlab = "Area")
fire["logarea"] <- ifelse(fire$area >0, log(fire$area), NA)
ggplot(data=fire, aes(x=logarea))+
geom_histogram(aes(y=..density..), col="black",fill="white")+
stat_function(fun=dnorm, args = list(mean=mean(fire$logarea, na.rm = TRUE), sd = sd(fire$logarea, na.rm=TRUE)),col="red")
fire["logarea"] <- ifelse(fire$area >0, log(fire$area), NA)
---
title: "Group_project"
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(broom)
library(olsrr)
library(ggplot2)
library(VGAM)
library(nnet)
library(DescTools)
library(ResourceSelection)
library(LogisticDx)
library(knitr)
library(mice)
library(caret)
library(leaps)
library(MASS)
library(glmnet)
```
## Forest Fire
```{r}
# Add season category
fire <- read.csv("forestfires.csv", header=TRUE, sep = ",")
fire$season <- rep("spring", 517)
for (i in 1:517){
if (fire$month[i] %in% c("feb","jan","dec")) fire$season[i] <- "winter"
if (fire$month[i] %in% c("oct","nov","sep")) fire$season[i] <- "autumn"
if (fire$month[i] %in% c("aug","jul","jun")) fire$season[i] <- "summer"
}
fire$season <- as.factor(fire$season)
fire$season.cat <- rep(0, 517)
for (i in 1:517){
if (fire$season[i] == "summer") {
fire$season.cat[i] <- 1
}
if (fire$season[i] == "autumn") {
fire$season.cat[i] <- 2
}
if (fire$season[i] =="winter") {
fire$season.cat[i] <- 3
}
}
fire
```
```{r}
# Area log transformation (for area>0)
hist(fire$area,40, main = "Histogram of area", xlab = "Area")
fire["logarea"] <- ifelse(fire$area >0, log(fire$area), NA)
ggplot(data=fire, aes(x=logarea))+
geom_histogram(aes(y=..density..), col="black",fill="white")+
stat_function(fun=dnorm, args = list(mean=mean(fire$logarea, na.rm = TRUE), sd = sd(fire$logarea, na.rm=TRUE)),col="red")
```
#### Linear Regression Analysis
```{r}
# Fit linear regression model to area>0 since this is normally distributed
area_posit <- fire[which(fire$area>0),]
summary(area_posit)
area_posit
mod_lin <- lm(logarea ~X+Y+month+day+FFMC+DMC+DC+ISI+temp+RH+wind+rain+as.factor(season.cat), data=area_posit[c(seq(1,12),15,16)])
summary(mod_lin)  # DMC and DC are being statistically significant
# Outliers
ols_plot_cooksd_chart(mod_lin)  #number 262 datapoint in this data set, which is id=500
ols_plot_resid_lev(mod_lin)
```
`
```{r}
cooksd <- cooks.distance(mod_lin)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd+0.001, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")
```
```{r}
# Get rid off the outliers
influential = which(cooksd>4*mean(cooksd, na.rm=T))  # influential points
area_posit[influential, ]   #all data for influential points
dat <- area_posit[-influential,]  #get rid off the influential points
dat
#Fit linear regression again, now without the influential points and outliers
mod_lin2 <- lm(logarea ~ ., data=dat[c(seq(1,12),15,16)])
summary(mod_lin2)
plot(mod_lin2, which=c(1,2,3))
step.forw <- step(lm(logarea~1, data=dat[c(seq(1,12),15,16)]), ~X+Y+month+day+FFMC+DMC+DC+ISI+temp+RH+wind+rain, direction = "forward")
step.back <- step(full.model, direction = "backward")
summary(step.forw)
summary(step.back)
table1<- matrix(c(summary(mod_lin)$r.squared, summary(mod_lin)$adj.r.squared, sqrt(mean(mod_lin$residuals^2)),AIC(mod_lin), BIC(mod_lin),
summary(mod_lin2)$r.squared, summary(mod_lin2)$adj.r.squared, sqrt(mean(mod_lin2$residuals^2)),AIC(mod_lin2), BIC(mod_lin2),
summary(step.forw)$r.squared, summary(step.forw)$adj.r.squared, sqrt(mean(step.forw$residuals^2)),AIC(step.forw), BIC(step.forw),
summary(step.back)$r.squared, summary(step.back)$adj.r.squared, sqrt(mean(step.back$residuals^2)),AIC(step.back), BIC(step.back)), ncol=5,nrow=4, byrow=TRUE)
colnames(table1)<- c("R^2", "Adjusted R^2", "Square root of MSE","AIC", "BIC")
rownames(table1)<- c("logarea ~.",
"logarea~., (w/o influential points)",
"model with forward selection based on AIC",
"model with backward elimination based on AIC")
table1 <- as.table(table1)
kable(table1)
```
### New complete dataset
```{r}
new_dat <- rbind(fire[which(fire$area==0),], dat)   #join the area_positive w/o influential points to the data w/ area=0
new_dat$burn <- ifelse(new_dat$area==0,0,1)  #to get the new dataset without the influential points
new_dat
md.pattern(new_dat)
```
### Logistic Regression
```{r}
# Fit Logistic Regression
lg_burn <- glm(burn ~ X+Y+month+day+FFMC+DMC+DC+ISI+temp+RH+wind+rain, family=binomial(),data=new_dat)
summary(lg_burn)
lg_burn2 <- glm(burn ~X+Y+month+day+FFMC+DMC+DC+ISI+temp+I(temp^2)+RH+wind+rain, family=binomial(), data=new_dat)
summary(lg_burn2)
hoslem.test(new_dat$burn, fitted(lg_burn), g=10)  #not a poor fit (small P-value, poor fit, H0:good fit)
hoslem.test(new_dat$burn, fitted(lg_burn2), g=10) #not a poor fit
gof(lg_burn)  #AUC=64.0%
gof(lg_burn2) #AUC=64.7%
```
install.packages('rsconnect')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='hq0411', token='BC7CA91CD8C717988C3784011F25ADDC', secret='iKASLrY8YYECsMlSsf1baJ8rOBQFP4AtE/t17ggL')
library(rsconnect)
rsconnect::deployApp('~/Desktop/BST260/BST260_group_project/Visualization/app.R')
rsconnect::deployApp("~Desktop/BST260/BST260_group_project/Visualization/app.R")
rsconnect::deployApp("~/Desktop/BST260/BST260_group_project/Visualization/app.R")
deployApp()
library(rsconnect)
deployApp()
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
View(step.forw)
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
choose_palette()
runApp('Desktop/BST260/BST260_group_project/Visualization')
install.packages("colorspace")
install.packages("colorspace")
library(colorspace)
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_gradientn(colors = hcl.colors("Fall"),
limits = c(2.2,33.3))+
theme_void()
library(tidyverse)
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_gradientn(colors = hcl.colors("Fall"),
limits = c(2.2,33.3))+
theme_void()
library(shiny)
library(tidyverse)
library(grid)
library(png)
library(Unicode)
library(colorspace)
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_gradientn(colors = hcl.colors("Fall"),
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_gradientn(colors = hcl.colors(12,"Fall"),
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_gradientn(colors = "Blue-Red",
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_continuous(color = "Blue-Red",
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_continuous(palette = "Heat",
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_colour_continuous_sequential(palette = "Heat",
limits = c(2.2,33.3))+
theme_void()
forestfire %>%
filter(month=="feb") %>%
ggplot(aes(X, Y))+
annotation_custom(rasterGrob(map,width = unit(1,"npc"),
height = unit(1,"npc")),
xmin = 0.5, xmax = 9.2, ymin = -9.2, ymax = -0.5)+
geom_jitter(width = 0.25,height = 0.25)+
scale_x_continuous(breaks = seq(1, 9),limits=c(0.5,9.5))+
scale_y_reverse(breaks = seq(1, 9),limits=c(9.5,0.5))+
scale_color_continuous_sequential(palette = "Heat",
limits = c(2.2,33.3))
runApp('Desktop/BST260/BST260_group_project/Visualization')
View(fire)
runApp('Desktop/BST260/BST260_group_project/Visualization')
max(forestfire$area)
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
min(forestfire$RH)
max(forestfire$RH)
min(forestfire$wind)
max(forestfire$wind)
min(forestfire$rain)
max(forestfire$rain)
lim <- c("Temperature" == c(0,35),
"RH" == c(15,100),
"Wind" == c(0,10),
"Rain" == c(0,7))
which(lim%in%"Temperature")
lim%in%"Temperature"
lim[1]
lim <- c("Temperature" = c(0,35),
"RH" = c(15,100),
"Wind" = c(0,10),
"Rain" = c(0,7))
lim[1]
which(var2%in%"Rain")
var2 <- c("Temperature","RH","Wind","Rain")
var2 <- c("Temperature","RH","Wind","Rain")
which(var2%in%"Rain")
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
runApp('Desktop/BST260/BST260_group_project/Visualization')
